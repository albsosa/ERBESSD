{"version":3,"sources":["componentes/Header.js","componentes/Callback/Callback.js","history.js","Auth/auth0-variables.js","Auth/Auth.js","componentes/Productos.js","componentes/Nosotros.js","componentes/Contacto.js","componentes/Error.js","componentes/Navegacion.js","componentes/routes.js","componentes/App.js","serviceWorker.js","index.js","componentes/Callback/loading.svg"],"names":["Header","react_default","a","createElement","Link","to","className","src","Callback","style","position","display","justifyContent","height","width","top","bottom","left","right","backgroundColor","loading","alt","Component","createHistory","AUTH_CONFIG","domain","clientId","callbackUrl","apiURL","Auth","Object","classCallCheck","this","auth0","WebAuth","clientID","redirectUri","audience","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","_this","parseHash","err","authResult","accessToken","idToken","setSession","history","replace","console","log","alert","concat","error","localStorage","getItem","Error","setItem","expiresAt","expiresIn","Date","getTime","_this2","checkSession","error_description","removeItem","Productos","state","productos","queryAPI","props","auth","headers","Authorization","axios","get","then","respuesta","setState","data","Fragment","location","legendPosition","es","options","maintainAspectRatio","onClick","Nosotros","Contacto","type","placeholder","value","Navegacion","iniciarSesion","cerrarSesion","resultado","NavLink","activeClassName","routes","Router","src_componentes_Header","src_componentes_Navegacion","Route","exact","path","render","src_componentes_Nosotros","src_componentes_Productos","assign","component","_ref","test","hash","componentes_Callback_Callback","App","Boolean","window","hostname","match","ReactDOM","componentes_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e29420f3.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Header.css';\nconst Header = () => {\n    return ( \n        <header>\n            <Link to={'/'}>\n                <img className=\"logo\" src=\"../img/logo.png\" />\n            </Link>\n        </header>\n     );\n}\n \nexport default Header; ","import React, { Component } from 'react';\nimport loading from './loading.svg';\n\nclass Callback extends Component {\n  render() {\n    const style = {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100vw',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div style={style}>\n        <img src={loading} alt=\"loading\"/>\n      </div>\n    );\n  }\n}\n\nexport default Callback;\n","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()\n","export const AUTH_CONFIG = {\n  domain: 'dev-kcq7ruco.auth0.com',\n  clientId: 'fLGsQ42Us4cHss4SRjMniWGucIQr5gzZ',\n  callbackUrl: 'http://localhost:3000/callback',\n  apiURL: 'http://graficas'\n}\n","import history from '../history';\nimport auth0 from 'auth0-js';\nimport { AUTH_CONFIG } from './auth0-variables';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    redirectUri: AUTH_CONFIG.callbackUrl,\n    audience : AUTH_CONFIG.apiURL,\n    responseType: 'token id_token',\n    scope: 'read:graficas'\n  });\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n      } else if (err) {\n        history.replace('/productos');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  // getAccessToken() {\n  //   return this.accessToken;\n  // }\n\n  getIdToken() {\n    return this.idToken;\n  }\n  getAccessToken(){\n    const accessToken = localStorage.getItem('access_token');\n    if(!accessToken){\n      return new Error('Hubo un error al generar el token');\n    }\n    return accessToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    history.replace('/productos');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    // navigate to the home route\n    history.replace('/productos');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React, { Component } from 'react';\nimport Producto from './Producto';\nimport './Productos.css';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\n\nimport axios from 'axios';\n\nclass Productos extends Component {\n\n    state = {\n            productos : []\n    }\n\n    componentWillMount() {\n\n       this.queryAPI();\n    }\n\n    queryAPI = () => {\n        // console.log(this.props.auth.getAccessToken() );\n        const { getAccessToken } = this.props.auth;\n\n        const headers = { 'Authorization': `Bearer ${getAccessToken() }` };\n\n        const url = 'http://localhost:5000/productos';\n\n        return axios.get(url, {headers} )\n            .then(respuesta => this.setState({productos: respuesta.data }));\n\n    }\n\n\n\n    login = () => {\n        this.props.auth.login();\n    }\n\n     render() { \n         const { isAuthenticated } = this.props.auth;\n\n          return ( \n               <div className=\"productos\">\n                    \n                    { isAuthenticated() && (\n                        <React.Fragment>\n                            <h2>Nuestra Gráficas</h2>\n                            <div className=\"chart\" location=\"Massachusetts\" legendPosition=\"bottom\">\n                                <Bar\n                                    data={this.state.productos}\n                                    width={1000}\n                                    height={500}\n                                    options={{\n                                        maintainAspectRatio: false\n                                    }}\n                                />\n                            </div>\n                            {/* <ul className=\"lista-productos\">\n                                {Object.keys(this.state.productos).map(producto => (\n                                    <Producto\n                                        informacion={this.state.productos[producto]}\n                                        key={producto}\n                                    />\n                            )) }\n                            </ul> */}\n                        </React.Fragment> \n                    )\n\n                    }\n                    \n\n                    {  !isAuthenticated() && (\n                        <div className=\"contenedor-boton\">\n                            <p>Para ver el contenido debes estar logueado:</p>\n                            <a className=\"boton\" onClick={ this.login }>Iniciar Sesión</a>\n                        </div>\n                    ) }\n\n                    \n               </div>\n           )\n     }\n}\n \nexport default Productos;","import React, { Component } from 'react';\nimport './Nosotros.css';\n\nclass Nosotros extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div className=\"contenedor-nosotros\">\n                <div className=\"imagen\">\n                    <img src=\"/img/WISER_MANO-1-e1544637765529.png\" alt=\"Imagen nosotros\" />\n                </div>\n                <div className=\"contenido\">\n                    <h2>A través del tiempo...</h2>\n                    <p>Es difícil imaginar como una pequeña idea puede transformar la vida de tanta gente…</p>\n                    <p>– Acabo de tener una idea! Que tal si compro una fotoresistencia y un resistor e intento hacer un sensor óptico con eso para poder balancear con mi computadora -.</p>\n                </div>\n            </div>\n\n         );\n    }\n}\n \nexport default Nosotros;","import React from 'react';\nimport './Contacto.css';\nconst Contacto = () => {\n    return ( \n        <form>\n            <legend>Formulario de Contacto</legend>\n            <div className=\"input-field\">\n                <label>Nombre: </label>\n                <input type=\"text\" placeholder=\"Tu nombre\" />\n            </div>\n            <div className=\"input-field\">\n                <label>Email: </label>\n                <input type=\"email\" placeholder=\"Tu nombre\" />\n            </div>\n            <div className=\"input-field\">\n                <label>Mensaje: </label>\n                <textarea ></textarea>\n            </div>\n            <div className=\"input-field enviar\">\n                <input type=\"submit\" value=\"Enviar\"/>\n            </div>\n        </form>\n     );\n}\n \nexport default Contacto;","import React, { Component } from 'react';\n\nclass Error extends Component {\n    state = {  }\n    render() { \n        return ( \n            <h1>Desde Error</h1>\n\n         );\n    }\n}\n \nexport default Error;","import React, {Component} from 'react';\nimport './Navegacion.css';\nimport {NavLink} from 'react-router-dom';\n\n\nclass Navegacion extends Component {\n\n    iniciarSesion = () => {\n        this.props.auth.login();\n    }\n\n    cerrarSesion = () => {\n        this.props.auth.logout();\n    }\n    \n     render(){\n  \n        // console.log(this.props.auth);\n        console.log(this.props.auth.getAccessToken() );\n\n\n        const { isAuthenticated } = this.props.auth;\n\n        let resultado;\n\n        if( isAuthenticated() ) {\n            resultado = <a onClick={this.cerrarSesion}>Cerrar Sesión</a>\n        } else {\n            resultado = <a onClick={this.iniciarSesion}>Iniciar Sesión</a>\n        }\n\n        return ( \n            <nav className=\"navegacion\">\n                 <NavLink to={'/nosotros'} activeClassName=\"activo\">Nosotros</NavLink>\n                 <NavLink to={'/productos'} activeClassName=\"activo\">Gráficas de productos</NavLink>\n                 <NavLink to={'/contacto'} activeClassName=\"activo\">Contacto</NavLink>\n                 {resultado}\n            </nav>\n        );\n     }\n}\n \nexport default Navegacion;","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\n//auth0\nimport Callback from './Callback/Callback';\nimport Auth from '../Auth/Auth';\nimport history from '../history';\n\n//componentes propios\nimport Productos from './Productos';\nimport Nosotros from './Nosotros';\nimport Contacto from './Contacto';\nimport Error from './Error';\nimport Header from './Header';\nimport Navegacion from './Navegacion';\n\nconst auth = new Auth();\n\nconst handleAuthentication = ({location}) => {\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication();\n  }\n}\n//npm run servidor\nexport const makeMainRoutes = () => {\n  return (\n      <Router history={history}>\n        <div className=\"contenedor\">\n        <Header />\n        <Navegacion auth={auth} />\n      \n        <Route exact path=\"/\" render={() => (\n              <Nosotros \n                   \n              />\n          )} />\n          <Route exact path=\"/nosotros\" render={() => (\n            <Nosotros \n                 \n            />\n        )} />\n          <Route exact path=\"/productos\" render={(props) => (\n              <Productos \n                  auth={auth} {...props} \n              />\n          )} />\n          <Route exact path=\"/contacto\" component={Contacto} />\n\n          \n          <Route path=\"/callback\" render={(props) => {\n            handleAuthentication(props);\n            return <Callback {...props} /> \n          }}/>\n        </div>\n      </Router>\n  );\n}\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport {makeMainRoutes} from './routes';\nconst routes = makeMainRoutes();\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        {routes}\n      </React.Fragment>\n\n        \n    \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";"],"sourceRoot":""}